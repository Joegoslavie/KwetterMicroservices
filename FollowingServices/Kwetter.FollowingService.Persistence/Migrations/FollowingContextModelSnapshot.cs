// <auto-generated />
using System;
using Kwetter.FollowingService.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kwetter.FollowingService.Persistence.Migrations
{
    [DbContext(typeof(FollowingContext))]
    partial class FollowingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kwetter.FollowingService.Persistence.Entity.BlockEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BlockedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BlockedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "BlockedId");

                    b.ToTable("Blocked");
                });

            modelBuilder.Entity("Kwetter.FollowingService.Persistence.Entity.FollowingEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("FollowingId")
                        .HasColumnType("int");

                    b.Property<int?>("FollowingProfileUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FollowingSince")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserProfileUserId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "FollowingId");

                    b.HasIndex("FollowingProfileUserId");

                    b.HasIndex("UserProfileUserId");

                    b.ToTable("Followings");
                });

            modelBuilder.Entity("Kwetter.FollowingService.Persistence.Entity.ProfileReferenceEntity", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("ProfileReferences");
                });

            modelBuilder.Entity("Kwetter.FollowingService.Persistence.Entity.FollowingEntity", b =>
                {
                    b.HasOne("Kwetter.FollowingService.Persistence.Entity.ProfileReferenceEntity", "FollowingProfile")
                        .WithMany()
                        .HasForeignKey("FollowingProfileUserId");

                    b.HasOne("Kwetter.FollowingService.Persistence.Entity.ProfileReferenceEntity", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUserId");

                    b.Navigation("FollowingProfile");

                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
